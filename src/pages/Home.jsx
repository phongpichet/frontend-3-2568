import React, { useState,useEffect } from "react";
import { Link,useNavigate } from "react-router-dom";


const Home = () => {
    // ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
    const navigate = useNavigate();
    const [isLoggedIn, setIsLoggedIn] = useState(false);


    useEffect(() => {
        const user = localStorage.getItem("user");
        if (user) {
            setIsLoggedIn(true);
        }
    }, []);

    const handleAddProduct = (newProduct) => {
        setProducts([...products, { id: products.length + 1, ...newProduct }]);
        setShowForm(false); // ‡∏õ‡∏¥‡∏î‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏´‡∏•‡∏±‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
    };

    const handleLogout = () => {
        localStorage.removeItem("user");
        setIsLoggedIn(false);
        navigate("/login");
    };
    const products = [
        { id: 1, name: "‡πÑ‡∏°‡πâ‡πÅ‡∏ö‡∏î‡∏°‡∏¥‡∏ô‡∏ï‡∏±‡∏ô", price: 99, image: "https://media.thairath.co.th/image/lNtepLubPpw2EMZcAp1V2PFs1a2h4xB6tXDSv9GYoaAwRbK930e9vA1.webp", description: "‡πÑ‡∏°‡πâ‡πÅ‡∏ö‡∏î‡∏°‡∏¥‡∏ô‡∏ï‡∏±‡∏ô‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏™‡∏†‡∏≤‡∏û‡∏î‡∏µ ‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏î‡∏µ", className:"w-64 h-64 object-cover rounded-lg mx-auto" },
        { id: 2, name: "‡∏£‡∏≠‡∏á‡πÄ‡∏ó‡πâ‡∏≤‡∏™‡∏ï‡∏±‡πä‡∏î", price: 200, image: "https://down-th.img.susercontent.com/file/e03cee463c86d6a743ad101d86827ccd", description: "‡∏ñ‡∏π‡∏Å‡πÄ‡∏Å‡πá‡∏ö‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏î‡∏µ ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÉ‡∏´‡∏°‡πà",className:"w-64 h-64 object-cover rounded-lg mx-auto" },
        { id: 3, name: "‡πÑ‡∏°‡πâ‡∏õ‡∏¥‡∏á‡∏õ‡∏≠‡∏á", price: 50, image: "https://img-187.uamulet.com/auction2hand/mPriceBayGImages_2H/2018/8/15/167-U1648933-636699220234866496-1.jpg", description: "‡πÑ‡∏°‡πâ‡∏õ‡∏¥‡∏á‡∏õ‡∏≠‡∏á‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ‡πÅ‡∏•‡πâ‡∏ß ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏≠‡∏¢ ‡∏™‡∏†‡∏≤‡∏û‡∏î‡∏µ",className:"w-64 h-64 object-cover rounded-lg mx-auto" },
        { id: 4, name: "‡πÑ‡∏°‡πâ‡πÄ‡∏ó‡∏ô‡∏ô‡∏¥‡∏™", price: 300, image: "https://inwfile.com/s-dy/8qw4q4.jpg", description: "‡πÑ‡∏°‡πâ‡πÄ‡∏ó‡∏ô‡∏ô‡∏¥‡∏™ ‡∏°‡∏∑‡∏≠‡∏™‡∏≠‡∏á‡∏Ç‡∏≠‡∏á‡πÅ‡∏ó‡πâ" },
        { id: 5, name: "‡πÑ‡∏°‡πâ‡∏Å‡∏≠‡∏•‡πå‡∏ü", price: 550, image: "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcR8q7_abjaNuquo5WqikU_jKOn9x_hzs7LHig&s", description: "‡πÑ‡∏°‡πâ‡∏Å‡∏≠‡∏•‡πå‡∏ü‡∏™‡∏†‡∏≤‡∏û‡∏î‡∏µ ‡∏™‡∏ß‡∏¢‡∏á‡∏≤‡∏°‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÉ‡∏´‡∏°‡πà" },
        { id: 6, name: "‡∏•‡∏π‡∏Å‡∏Å‡∏≠‡∏•‡πå‡∏ü", price: 100, image: "https://inwfile.com/s-cn/2n1p4t.jpg", description: "‡∏•‡∏π‡∏Å‡∏Å‡∏≠‡∏•‡πå‡∏ü‡∏°‡∏∑‡∏≠‡∏™‡∏≠‡∏á‡∏ó‡∏∏‡∏Å‡∏™‡∏†‡∏≤‡∏û ‡∏à‡∏≥‡∏´‡∏ô‡πà‡∏≤‡∏¢‡∏•‡∏π‡∏Å‡∏Å‡∏≠‡∏•‡πå‡∏ü" },
        { id: 7, name: "‡∏•‡∏π‡∏Å‡∏ö‡∏≠‡∏•", price: 300, image: "https://down-th.img.susercontent.com/file/357fdb69fc8cdd9cb13b52495dcbc26a", description: "‡∏•‡∏π‡∏Å‡∏ö‡∏≠‡∏•‡πÄ‡∏Å‡πà‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏ô 100% ‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏î‡∏µ" },
        { id: 8, name: "‡∏´‡∏°‡∏ß‡∏Å‡∏à‡∏±‡∏Å‡∏£‡∏¢‡∏≤‡∏ô", price: 1200, image: "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ5WpQpAtY8j6JlgEhgjDrHDKBxWRDf34mdygd0PplSZwh0fMkXObjoNRJNIpohMpNDza0&usqp=CAU", description: "‡∏´‡∏°‡∏ß‡∏Å‡πÅ‡∏ö‡∏£‡∏ô‡∏î‡πå‡πÅ‡∏ó‡πâ ‡∏´‡∏°‡∏ß‡∏Å Oakley ‡∏£‡∏∏‡πà‡∏ô ARO3 ‡∏™‡∏†‡∏≤‡∏û‡∏î‡∏µ‡∏ó‡∏∏‡∏Å‡∏™‡πà‡∏ß‡∏ô ‡∏™‡∏µ‡∏™‡∏ß‡∏¢‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÉ‡∏´‡∏°‡πà" },
        { id: 9, name: "‡∏•‡∏π‡∏Å‡πÄ‡∏ö‡∏ï‡∏≠‡∏á", price: 55, image: "https://cdn.ennxo.com/uploads/products/640/7a28f348a25c48afa8209f867b6fc56b.jpg", description: "‡∏•‡∏π‡∏Å‡πÄ‡∏ö‡∏ï‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡∏™‡∏≠‡∏á" },
    ];

    const [selectedProduct, setSelectedProduct] = useState(null);
    const [quantity, setQuantity] = useState(1);
    const [cart, setCart] = useState([]);
    const [isCartOpen, setIsCartOpen] = useState(false);
    const [orders, setOrders] = useState([]);
    const [isOrderOpen, setIsOrderOpen] = useState(false);
    const [expandedOrder, setExpandedOrder] = useState(null);

    const openModal = (product) => {
        setSelectedProduct(product);
        setQuantity(1);
    };
    const closeModal = () => {
        setSelectedProduct(null);
    };

    const increaseQuantity = () => setQuantity(quantity + 1);
    const decreaseQuantity = () => {
        if (quantity > 1) setQuantity(quantity - 1);
    };

    const addToCart = () => {
        const existingProduct = cart.find(item => item.id === selectedProduct.id);
        if (existingProduct) {
            setCart(cart.map(item => 
                item.id === selectedProduct.id ? { ...item, quantity: item.quantity + quantity } : item
            ));
        } else {
            setCart([...cart, { ...selectedProduct, quantity }]);
        }
        closeModal();
    };

    const toggleCart = () => {
        setIsCartOpen(!isCartOpen);
    };

    const removeFromCart = (id) => {
        setCart(cart.filter(item => item.id !== id));
    };

    const confirmOrder = () => {
        if (cart.length === 0) return;

        const newOrder = {
            id: new Date().getTime(),
            items: cart,
            total: cart.reduce((sum, item) => sum + item.price * item.quantity, 0),
        };

        setOrders([...orders, newOrder]);
        setCart([]);
        setIsCartOpen(false);
        alert("‚úÖ ‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!");
    };

    const toggleOrder = () => {
        setIsOrderOpen(!isOrderOpen);
    };

    const toggleOrderDetails = (id) => {
        setExpandedOrder(expandedOrder === id ? null : id);
    };

    const removeOrder = (id) => {
        setOrders(orders.filter(order => order.id !== id));
    };

    return (
        
        <div className="min-h-screen bg-gray-100 p-6">
            <nav className="flex justify-between items-center bg-white p-4 shadow-md rounded-lg">
                <h1 className="text-xl font-bold text-blue-600">‡∏£‡πâ‡∏≤‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏Å‡∏µ‡∏¨‡∏≤‡∏°‡∏∑‡∏≠‡∏™‡∏≠‡∏á</h1>
                <div>
                    {/* ‡∏ñ‡πâ‡∏≤‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡πÅ‡∏•‡πâ‡∏ß ‡πÅ‡∏™‡∏î‡∏á‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ */}
      {isLoggedIn && (
        <button className="bg-blue-500 text-white px-4 py-2 rounded mt-4">
          ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
        </button>
      )}
                {!isLoggedIn ? (
                        <>
                            <Link to="/login" className="px-4 py-2 bg-blue-500 text-white rounded-lg mr-2">Login</Link>
                            <Link to="/register" className="px-4 py-2 bg-green-500 text-white rounded-lg mr-4">Register</Link>
                        </>
                    ) : (
                        <button onClick={handleLogout} className="px-4 py-2 bg-red-500 text-white rounded-lg">
                            Logout
                        </button>
                    )}
                    <button className="px-4 py-2 bg-yellow-500 text-white rounded-lg mr-2" onClick={toggleCart}>
                        üõí ‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤ ({cart.reduce((sum, item) => sum + item.quantity, 0)})
                    </button>
                    <button className="px-4 py-2 bg-purple-500 text-white rounded-lg" onClick={toggleOrder}>
                        üì¶ Order
                    </button>
                    
                        <div className="mt-6 text-center">
                <h2 className="text-2xl font-bold text-gray-700">
                    {isLoggedIn ? "‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤!" : "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö"}
                </h2>
            </div>
                </div>
            </nav>

            {selectedProduct && (
                <div className="fixed inset-0 flex items-center justify-center bg-black bg-opacity-50">
                    <div className="bg-white p-6 rounded-lg shadow-lg max-w-md w-full">
                        <h2 className="text-2xl font-bold text-gray-800">{selectedProduct.name}</h2>
                        <img src={selectedProduct.image} alt={selectedProduct.name} className="w-full h-56 object-cover rounded-lg my-3" />
                        <p className="text-gray-600">{selectedProduct.description}</p>
                        <p className="text-xl font-semibold text-blue-600 mt-2">{selectedProduct.price.toLocaleString()} ‡∏ö‡∏≤‡∏ó</p>

                        {/* ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ */}
                        <div className="flex items-center justify-between mt-4">
                            <button className="px-3 py-1 bg-gray-200 text-gray-800 rounded-lg" onClick={decreaseQuantity}>-</button>
                            <span className="text-lg font-bold">{quantity}</span>
                            <button className="px-3 py-1 bg-gray-200 text-gray-800 rounded-lg" onClick={increaseQuantity}>+</button>
                        </div>

                        {/* ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏° */}
                        <p className="text-lg font-semibold text-green-600 mt-2">
                            ‡∏£‡∏ß‡∏°: {(selectedProduct.price * quantity).toLocaleString()} ‡∏ö‡∏≤‡∏ó
                        </p>

                        {/* ‡∏õ‡∏∏‡πà‡∏°‡∏ï‡πà‡∏≤‡∏á ‡πÜ */}
                        <div className="mt-4 flex justify-between">
                            <button className="px-4 py-2 bg-gray-400 text-white rounded-lg" onClick={closeModal}>‡∏õ‡∏¥‡∏î</button>
                            <button className="px-4 py-2 bg-blue-500 text-white rounded-lg" onClick={addToCart}>
                                ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤
                            </button>
                        </div>
                    </div>
                </div>
            )}

            {/* ‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ */}
            {isCartOpen && (
                <div className="fixed top-0 right-0 w-80 h-full bg-white shadow-lg p-4">
                    <h2 className="text-xl font-bold">üõí ‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</h2>
                    {cart.length === 0 ? (
                        <p className="text-gray-600 mt-4">‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤</p>
                    ) : (
                        <ul className="mt-4">
                            {cart.map((item) => (
                                <li key={item.id} className="flex justify-between items-center border-b py-2">
                                    <div>
                                        <h3 className="font-semibold">{item.name}</h3>
                                        <p>{item.quantity} x {item.price} = {(item.quantity * item.price).toLocaleString()} ‡∏ö‡∏≤‡∏ó</p>
                                    </div>
                                    <button className="text-red-500" onClick={() => removeFromCart(item.id)}>üóë</button>
                                </li>
                            ))}
                        </ul>
                    )}
                    <button className="mt-4 w-full bg-green-500 text-white py-2 rounded-lg" onClick={confirmOrder}>
                        ‚úÖ ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠
                    </button>
                    <button className="mt-2 w-full bg-gray-500 text-white py-2 rounded-lg" onClick={toggleCart}>‡∏õ‡∏¥‡∏î</button>
                </div>
            )}

            <div className="mt-6 grid grid-cols-1 md:grid-cols-3 gap-6">
                {products.map((product) => (
                    <div key={product.id} className="bg-white p-4 rounded-lg shadow-lg">
                        <img src={product.image} alt={product.name} className="w-full h-40 object-cover rounded-md" />
                        <h3 className="mt-2 text-lg font-semibold">{product.name}</h3>
                        <p className="text-gray-700">‡∏£‡∏≤‡∏Ñ‡∏≤: {product.price} ‡∏ö‡∏≤‡∏ó</p>
                        <button 
                            className="mt-2 w-full bg-blue-600 text-white py-2 rounded-lg"
                            onClick={() => openModal(product)}
                        >
                            ‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î
                        </button>
                    </div>
                ))}
            </div>

            {isOrderOpen && (
                <div className="fixed top-0 left-0 w-80 h-full bg-white shadow-lg p-4">
                    <h2 className="text-xl font-bold">üì¶ Order</h2>
                    {orders.length === 0 ? (
                        <p className="text-gray-600 mt-4">‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠</p>
                    ) : (
                        <ul className="mt-4">
                            {orders.map((order) => (
                                <li key={order.id} className="border-b py-2">
                                    <div className="flex justify-between items-center">
                                        <h3 className="font-semibold cursor-pointer" onClick={() => toggleOrderDetails(order.id)}>
                                            Order #{order.id}
                                        </h3>
                                        <button className="text-red-500" onClick={() => removeOrder(order.id)}>üóë ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å</button>
                                    </div>
                                    <p>‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°: {order.total.toLocaleString()} ‡∏ö‡∏≤‡∏ó</p>
                                    {expandedOrder === order.id && (
                                        <ul className="mt-2 bg-gray-100 p-2 rounded-lg">
                                            {order.items.map((item) => (
                                                <li key={item.id} className="text-sm">
                                                    {item.name} - {item.quantity} x {item.price} = {(item.quantity * item.price).toLocaleString()} ‡∏ö‡∏≤‡∏ó
                                                </li>
                                            ))}
                                        </ul>
                                    )}
                                </li>
                            ))}
                        </ul>
                    )}
                    <button className="mt-4 w-full bg-gray-500 text-white py-2 rounded-lg" onClick={toggleOrder}>‡∏õ‡∏¥‡∏î</button>
                </div>
            )}
        </div>
        
    );
};

export default Home;
